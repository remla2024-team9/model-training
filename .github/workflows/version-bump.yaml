name: Bump Version and Push Tag

on:
  pull_request:
    types: [closed]

jobs:
  bump_version:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SAMUEL_PAT2 }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Bump version
        id: bump_version
        run: |
          CURRENT_VERSION=$(poetry version -s)
          echo "Current version: $CURRENT_VERSION"
          VERSION_PARTS=(${CURRENT_VERSION//./ })
          VERSION_PARTS[2]=$((VERSION_PARTS[2]+1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo "New version: $NEW_VERSION"
          poetry version $NEW_VERSION
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Verify version consistency
        run: |
          POETRY_VERSION=$(poetry version --short)
          if [ "$POETRY_VERSION" != "${{ steps.bump_version.outputs.new_version }}" ]; then
            echo "Version in pyproject.toml ($POETRY_VERSION) does not match the expected new version (${{ steps.bump_version.outputs.new_version }})"
            exit 1
          fi

      - name: Commit version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add pyproject.toml
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git tag ${{ steps.bump_version.outputs.new_version }}
          git push origin main --tags